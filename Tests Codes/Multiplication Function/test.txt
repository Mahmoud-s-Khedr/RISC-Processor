# Multiplication Function
# $6 is used as a virtual stack pointer so ITS VALUE IS NOT PRESERVED!
# Uses $5 as the address that contain the input 0($5), 1($5) are the inputs
# Uses $4, $3 to calculate the output, $2 as a counter but thier values are preserved
# The output is returned in $5


addi $2, $0, -4
addi $3, $0, 9
addi $4, $0, 10

addi $5, $0, 6
jal mul

exit: j exit

mul:

addi $6, $0, -1
sw $4, 0($6) # Save Preserved values
sw $3, -1($6)
sw $2, -2($6)

lw $4, 0($5) # Load inputs
lw $3, 1($5)

addi $2, $0, 0
addi $5, $0, 0

loop:
beq $2, $4, return
add $5, $5, $3
addi $2, $2, 1
j loop

return:

lw $4, 0($6) # Load Preserved values
lw $3, -1($6)
lw $2, -2($6)

jr $7